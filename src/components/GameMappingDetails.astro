---
import type { gameSchema } from 'src/lib/markdoc/frontmatter.schema'
import { getCompatibility } from 'src/utils/compatibility'
import type { z } from 'zod'

type GameSchema = z.infer<typeof gameSchema>

interface Props {
  game: GameSchema['game']
  mapping: GameSchema['mapping']
}

const { game, mapping } = Astro.props
---

<div
  class="custom-grid bg-white-200 text-black dark:bg-[#0d1115] items-start dark:border-[#192129] shadow-lg border dark:shadow-none border-stone-200 dark:text-white p-6 gap-6 rounded-2xl"
>
  <img
    class="custom-grid__img block justify-self-center m-0 rounded border shadow border-stone-200 dark:border-[#192129]"
    src={game.image}
  />
  <div class="custom-grid__text">
    <a href={game.bgg} class="!bg-none text-current text-3xl"
      ><span>{game.title}</span><i class="ti ti-external-link ml-1"></i></a
    >
    <p>{game.description}</p>

    <div class="flex items-center justify-center flex-wrap gap-4">
      <ul class="list-none p-0 m-0 grow basis-52">
        <li class="p-0 m-0">
          <i class="ti ti-discount-check"></i>
          <span class="text-stone-700 dark:text-[#8da1b6]">Compatibility:</span>
          {getCompatibility(mapping.compatibility)} ({mapping.compatibility}/5)
        </li>
        <li class="p-0 m-0">
          <i class="ti ti-cards"></i>
          <span class="text-stone-700 dark:text-[#8da1b6]">Required cards:</span
          >
          {mapping.requiredCardsCount}
        </li>
        <li class="p-0 m-0">
          <i class="ti ti-brush"></i>
          <span class="text-stone-700 dark:text-[#8da1b6]"
            >Required drawing{
              mapping.requiredDrawingsCount === 1 ? '' : 's'
            }:</span
          >
          {mapping.requiredDrawingsCount}
        </li>
        <li class="p-0 m-0">
          <i class="ti ti-timeline-event"></i>
          <span class="text-stone-700 dark:text-[#8da1b6]">Deck version:</span>
          {mapping.deckVersion}
        </li>

        {
          (game.rating ||
            game.players ||
            game.time ||
            game.mechanics ||
            game.complexity) && (
            <div class="h-[2px] bg-gray-200 rounded-full my-2" />
          )
        }

        {
          game.rating && (
            <li class="p-0 m-0">
              <i class="ti ti-star" />
              <span class="text-stone-700 dark:text-[#8da1b6]">Rating:</span>
              {game.rating}/10
            </li>
          )
        }
        {
          game.players && (
            <li class="p-0 m-0">
              <i class="ti ti-users" />
              <span class="text-stone-700 dark:text-[#8da1b6]">Players:</span>
              {game.players}
            </li>
          )
        }
        {
          game.time && (
            <li class="p-0 m-0">
              <i class="ti ti-clock" />
              <span class="text-stone-700 dark:text-[#8da1b6]">Time:</span>
              {game.time} min
            </li>
          )
        }
        {
          game.complexity && (
            <li class="p-0 m-0">
              <i class="ti ti-brain" />
              <span class="text-stone-700 dark:text-[#8da1b6]">
                Complexity:
              </span>
              {game.complexity}/5
            </li>
          )
        }
        {
          game.mechanics && (
            <li class="p-0 m-0">
              <i class="ti ti-settings" />
              <span class="text-stone-700 dark:text-[#8da1b6]">Mechanics:</span>
              <ul class="p-0 m-0 pl-7 text-sm leading-5">
                {game.mechanics?.map((mechanic) => (
                  <li class="p-0 m-0">{mechanic}</li>
                ))}
              </ul>
            </li>
          )
        }
      </ul>
    </div>
  </div>
  <div class="custom-grid__rules">
    {
      game.rules && (
        <a
          href={game.rules}
          class="unset block p-3 px-4 mx-auto max-w-xs border-none w-full leading-none shadow-lg hover:text-white shadow-blue-300 dark:shadow-blue-900 bg-blue-500 bg-none rounded-lg text-white font-bold uppercase tracking-wider"
        >
          <>
            <i class="ti ti-file-text mr-2" />
            <span>Rules</span>
          </>
        </a>
      )
    }
  </div>
</div>

<style lang="scss" scoped>
  .custom-grid {
    $img-height-mobile: 18rem;
    $img-width-desktop: 12rem;

    display: grid;
    grid-template: auto auto auto auto / auto;
    grid-template-areas: 'img' 'text' 'text' 'rules';

    @screen sm {
      grid-template: auto 1fr / #{$img-width-desktop} auto;
      grid-template-areas: 'img text' 'rules text';
    }
    &__img {
      grid-area: img;
      width: auto;
      max-height: $img-height-mobile;
      @screen sm {
        width: $img-width-desktop;
        max-height: unset;
      }
    }
    &__text {
      grid-area: text;
    }
    &__rules {
      grid-area: rules;
    }
  }
</style>
