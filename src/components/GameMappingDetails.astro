---
import type { gameSchema } from 'src/lib/markdoc/frontmatter.schema'
import { getCompatibility } from 'src/utils/compatibility'
import type { z } from 'zod'

type GameSchema = z.infer<typeof gameSchema>

interface Props {
  game: GameSchema['game']
  mapping: GameSchema['mapping']
}

const { game, mapping } = Astro.props
---

<div
  class="bg-white-200 text-black dark:bg-[#0d1115] items-start dark:border-[#192129] shadow-lg border dark:shadow-none border-stone-200 dark:text-white flex flex-wrap justify-center p-6 gap-6 rounded-2xl"
>
  <img
    class="grow-0 m-0 max-h-64 max-w-[50vw] rounded border shadow border-stone-200 dark:border-[#192129]"
    src={game.image}
  />
  <div class="grow basis-40">
    <a href={game.bgg} class="!bg-none text-current text-3xl"
      ><span>{game.title}</span><i class="ti ti-external-link ml-1"></i></a
    >
    <p>{game.description}</p>

    <div class="flex items-center justify-center flex-wrap gap-4">
      <ul class="list-none p-0 m-0 grow basis-52">
        <li class="p-0 m-0">
          <span class="text-stone-700 dark:text-[#8da1b6]">Compatibility:</span>
          {getCompatibility(mapping.compatibility)} ({mapping.compatibility}/5)
        </li>
        <li class="p-0 m-0">
          <span class="text-stone-700 dark:text-[#8da1b6]">Required cards:</span
          >
          {mapping.requiredCardsCount}
        </li>
        <li class="p-0 m-0">
          <span class="text-stone-700 dark:text-[#8da1b6]"
            >Required drawing{
              mapping.requiredDrawingsCount === 1 ? '' : 's'
            }:</span
          >
          {mapping.requiredDrawingsCount}
        </li>
        <li class="p-0 m-0">
          <span class="text-stone-700 dark:text-[#8da1b6]">Deck version:</span>
          {mapping.deckVersion}
        </li>

        {
          (game.players || game.time || game.mechanics || game.complexity) && (
            <div class="h-[2px] bg-gray-200 rounded-full my-2" />
          )
        }

        {
          game.players && (
            <li class="p-0 m-0">
              <span class="text-stone-700 dark:text-[#8da1b6]">Players:</span>
              {game.players}
            </li>
          )
        }
        {
          game.time && (
            <li class="p-0 m-0">
              <span class="text-stone-700 dark:text-[#8da1b6]">Time:</span>
              {game.time} min
            </li>
          )
        }
        {
          game.mechanics && (
            <li class="p-0 m-0">
              <span class="text-stone-700 dark:text-[#8da1b6]">Mechanics:</span>
              {game.mechanics.join(', ')}.
            </li>
          )
        }
        {
          game.complexity && (
            <li class="p-0 m-0">
              <span class="text-stone-700 dark:text-[#8da1b6]">
                Complexity:
              </span>
              {game.complexity} / 5
            </li>
          )
        }
      </ul>
      {
        game.rules && (
          <a
            href={game.rules}
            class="unset w-24 h-24 leading-none gap-1 pb-2 !bg-none flex flex-col items-center justify-center rounded-full shadow-lg hover:text-white shadow-blue-300 dark:shadow-blue-900 bg-blue-500 text-white font-bold uppercase tracking-wider"
          >
            <i class="ti ti-file-text text-3xl block" />
            <span>Rules</span>
          </a>
        )
      }
    </div>
  </div>
</div>
