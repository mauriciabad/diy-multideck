---
interface Props {
  cards: (number | NonNumberedCard)[]
  layout: Layout
}

const { cards = [], layout = 'basic' }: Props = Astro.props

const cardsSet = new Set(cards)

const layouts = [
  { key: 'basic', text: 'Basic' },
  { key: '3d', text: '3D' },
  { key: 'sequential', text: 'Sequential' },
  { key: 'pyramidal', text: 'Pyramidal' },
  { key: 'coin', text: 'Coin flip' },
] as const satisfies {
  key: string
  text: string
}[]

type NonNumberedCard = 'cover' | 'notes' | 'back' | 'other'
type Layout = (typeof layouts)[number]['key']

const cardGrids: Record<Layout, (number | NonNumberedCard | null)[][]> = {
  basic: [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 120, 121, 122, 123, 124],
    [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 131, 132, 133, 134],
    [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 140, 141, 142, 143, 144],
    [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 150, 151, 152, 153, 154],
    [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 125, 126, 127, 128, 129],
    [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 138, 139],
    [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 145, 146, 147, 148, 149],
    [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 155, 156, 157, 158, 159],
    [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 'cover', null, null, null, null],
    [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 'notes', null, null, null, null],
    [
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      'back',
      null,
      null,
      null,
      null,
    ],
    [
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      'other',
      null,
      null,
      null,
      null,
    ],
  ],
  sequential: [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
    [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
    [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
    [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
    [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
    [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],
    [90, 91, 92, 93, 94, 95, 96, 97, 98, 99],
    [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
    [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
    [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
    [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
    [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
    [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
    ['cover', 'notes', 'back', 'other', null, null, null, null, null],
  ],
  '3d': [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
    [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],
    [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
    [90, 91, 92, 93, 94, 95, 96, 97, 98, 99],
    [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
    [100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
    [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
    [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
    [110, 111, 112, 113, 114, 115, 116, 117, 118, 119],
    [120, 121, 122, 123, 124, 125, 126, 127, 128, 129],
    [130, 131, 132, 133, 134, 135, 136, 137, 138, 139],
    [140, 141, 142, 143, 144, 145, 146, 147, 148, 149],
    [150, 151, 152, 153, 154, 155, 156, 157, 158, 159],
    ['cover', 'notes', 'back', 'other', null, null, null, null, null],
  ],
  pyramidal: [
    [0, 1, 5, 6, 121, 2, 4, 7, 122, 3, 8, 123, 9, 124, 120],
    [10, 11, 15, 16, 131, 12, 14, 17, 132, 13, 18, 133, 19, 134, 130],
    [20, 21, 25, 26, 141, 22, 24, 27, 142, 23, 28, 143, 29, 144, 140],
    [30, 31, 35, 36, 151, 32, 34, 37, 152, 33, 38, 153, 39, 154, 150],
    [40, 41, 45, 46, 126, 42, 44, 47, 127, 43, 48, 128, 49, 129, 125],
    [50, 51, 55, 56, 136, 52, 54, 57, 137, 53, 58, 138, 59, 139, 135],
    [60, 61, 65, 66, 146, 62, 64, 67, 147, 63, 68, 148, 69, 149, 145],
    [70, 71, 75, 76, 156, 72, 74, 77, 157, 73, 78, 158, 79, 159, 155],
    [80, 81, 85, 86, null, 82, 84, 87, null, 83, 88, null, 89, null, null],
    [90, 91, 95, 96, null, 92, 94, 97, null, 93, 98, null, 99, null, null],
    [
      100,
      101,
      105,
      106,
      null,
      102,
      104,
      107,
      null,
      103,
      108,
      null,
      109,
      null,
      null,
    ],
    [
      110,
      111,
      115,
      116,
      null,
      112,
      114,
      117,
      null,
      113,
      118,
      null,
      119,
      null,
      null,
    ],
    [
      'cover',
      'notes',
      'back',
      'other',
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
  ],
  coin: [
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 120, 121, 122, 123, 124],
    [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 125, 126, 127, 128, 129],
    [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 140, 141, 142, 143, 144],
    [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 145, 146, 147, 148, 149],
    [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 131, 132, 133, 134],
    [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 135, 136, 137, 138, 139],
    [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 150, 151, 152, 153, 154],
    [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 155, 156, 157, 158, 159],
    [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 'cover', null, null, null, null],
    [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 'notes', null, null, null, null],
    [
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      'back',
      null,
      null,
      null,
      null,
    ],
    [
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      'other',
      null,
      null,
      null,
      null,
    ],
  ],
}

const miniCardVersionByLayout = {
  basic: 'basic',
  '3d': '3d',
  sequential: 'sequential',
  pyramidal: 'sequential',
  coin: 'sequential',
} as const satisfies Record<Layout, 'basic' | '3d' | 'sequential'>
---

<div class="overflow-x-auto -mx-3 sm:mx-0 px-3 sm:px-0">
  <div
    class="grid gap-0.5 items-center grid-cols-[repeat(var(--columns,15),minmax(2.5rem,3.5rem))] w-full mx-auto justify-center-safe"
    style={{
      '--columns': cardGrids[layout][0]?.length ?? 15,
    }}
  >
    {
      cardGrids[layout].flat().map((cardIdOrName) =>
        cardIdOrName === null ? (
          <div />
        ) : (
          <img
            height="200"
            width="200"
            src={
              typeof cardIdOrName === 'string'
                ? `/images/mini-cards/extra-cards/${cardIdOrName}.svg`
                : `/images/mini-cards/${miniCardVersionByLayout[layout]}/${cardIdOrName}.png`
            }
            alt={`Card ${cardIdOrName}`}
            class:list={[
              'm-0 shadow-xl rounded-lg border-2 bg-white',
              {
                'opacity-25 border-white': !cardsSet.has(cardIdOrName),
                'border-stone-500': cardsSet.has(cardIdOrName),
              },
            ]}
          />
        )
      )
    }
  </div>
</div>
