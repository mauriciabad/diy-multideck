---
import CoinFlip from './CoinFlip.astro'
import Suit from './Suit.astro'
import { isSuitEmoji } from './suits'
import TextWithBreaks from '../TextWithBreaks.astro'
import GenericTable from '../GenericTable.astro'
import ColorSuit from './ColorSuit.astro'

const rows = [
  ['🔥', 'Fi-re', 'Red', 0, '0...9 + XJQKA', 'no'],
  ['💧', 'Wa-ter', 'Blue', 1, '0...9 + XJQKA', 'yes'],
  ['⭐', 'Stars', 'Ye-llow', 2, '0...9 + XJQKA', 'no'],
  ['🍀', 'Clubs', 'Green', 3, '0...9 + XJQKA', 'yes'],
  ['🍊', 'Oran-ges', 'Oran-ge', 4, '0...9 + XJQKA', 'no'],
  ['🍆', 'Egg-plants', 'Pur-ple', 5, '0...9 + XJQKA', 'yes'],
  ['💭', 'Clo-uds', 'Whi-te', 6, '0...9 + XJQKA', 'no'],
  ['🕷️', 'Spi-ders', 'Black', 7, '0...9 + XJQKA', 'yes'],
  ['🌸', 'Flo-wers', 'Pink', 8, '0...9', 'unknown'],
  ['💎', 'Dia-monds', 'Cyan', 9, '0...9', 'unknown'],
  ['💩', 'Poops', 'Brown', 10, '0...9', 'unknown'],
  ['🗿', 'Moais', 'Gray', 11, '0...9', 'unknown'],
] satisfies string[][]
---

<GenericTable>
  <Fragment slot="thead">
    <tr>
      <th>Emo<wbr />ji</th>
      <th class="border-l text-left pl-2">Na<wbr />me</th>
      <th class="border-l text-left pl-2">Co<wbr />lor</th>
      <th class="border-l">Id</th>
      <th class="border-l">Ra<wbr />nks</th>
      <th class="border-l">Coin</th>
    </tr>
  </Fragment>

  <Fragment slot="tbody">
    {
      rows.map((row, rowN) => (
        <tr
          class:list={[
            '[&_td]:border-l first:[&_td]:border-l-0',
            {
              'bg-black/5 dark:bg-white/5': rowN % 2 === 0,
            },
          ]}
        >
          <td>
            {isSuitEmoji(row[0]) ? (
              <Suit emoji={row[0]} size="large" />
            ) : (
              row[0]
            )}
          </td>

          <td class="text-left pl-2">
            <TextWithBreaks text={row[1]} breakChar="-" />
          </td>
          <td class="text-left pl-2">
            <ColorSuit color={row[2].toLowerCase().replace(/-/g, '')} noAlt />
            <TextWithBreaks text={row[2]} breakChar="-" />
          </td>
          <td>{row[3]}</td>
          <td>{row[4]}</td>
          <td>
            {row[5] === 'yes' || row[5] === 'no' || row[5] === 'unknown' ? (
              <CoinFlip id={row[5]} />
            ) : (
              row[5]
            )}
          </td>
        </tr>
      ))
    }
  </Fragment>
</GenericTable>
