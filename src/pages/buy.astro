---
import PageMeta from '../components/PageMeta.astro'
import PageLayout from '../layouts/PageLayout.astro'
---

<PageLayout>
  <PageMeta title="Buy the DIY Multideck" slot="meta" />
  <Fragment slot="main">
    <h1
      class="text-center mb-8 font-extrabold text-5xl md:text-6xl tracking-tight pt-4 pb-2 overflow-hidden"
    >
      Buy the
      <span
        class="bg-gradient-to-br from-[#3c72fb] via-[#f91669] to-[#c10cea] dark:from-primary-main dark:via-primary-main dark:to-primary-main bg-clip-text text-transparent"
      >
        DIY Multideck
      </span>
    </h1>
    <p class="text-center">
      Sorry, the deck is <strong>not avilable</strong> yet, because it's still in
      development.
    </p>

    <p class="mt-4 text-center">
      But I can send you an email when I release it.
    </p>

    <label
      for="subscribe-input"
      class="block mt-12 max-w-[450px] mx-auto w-full"
      id="subscribe-div"
    >
      <span>Email</span>
      <div class="flex">
        <input
          type="email"
          name="email"
          id="subscribe-input"
          required
          class="grow min-w-0 bg-white dark:bg-slate-800 border border-slate-400 dark:border-slate-500 rounded px-3 py-1 focus-visible:ring-4 outline-none ring-orange-500 mr-3"
        />
        <button
          id="subscribe-button"
          class="grow-0 cursor-pointer bg-orange-500 text-white rounded-md px-4 focus-visible:ring-4 outline-none ring-offset-2 ring-stone-500"
          ><i class="ti ti-mail text-lg align-bottom pr-2"></i>Subscribe</button
        >
      </div>
    </label>
    <div
      id="subscribe-done"
      class="hidden mt-16 text-center text-4xl text-green-600 font-light"
    >
      <i class="ti ti-circle-check text-4xl"></i>
      Subscribed!
    </div>
    <div
      id="subscribe-error"
      class="hidden mt-16 text-center text-4xl text-red-600 font-light"
    >
      <i class="ti ti-circle-x text-4xl"></i>
      Error
    </div>
  </Fragment>
</PageLayout>

<script>
  const subscribeButton = document.getElementById(
    'subscribe-button'
  ) as HTMLButtonElement | null
  if (!subscribeButton)
    throw new Error('Subscribe button is does not exist in the page')

  const subscribeInput = document.getElementById(
    'subscribe-input'
  ) as HTMLInputElement | null
  if (!subscribeInput)
    throw new Error('Subscribe input is does not exist in the page')

  const subscribeDone = document.getElementById(
    'subscribe-done'
  ) as HTMLDivElement | null
  if (!subscribeDone)
    throw new Error('Subscribe done is does not exist in the page')

  const subscribeError = document.getElementById(
    'subscribe-error'
  ) as HTMLDivElement | null
  if (!subscribeError)
    throw new Error('Subscribe error is does not exist in the page')

  const subscribeDiv = document.getElementById(
    'subscribe-div'
  ) as HTMLLabelElement | null
  if (!subscribeDiv)
    throw new Error('Subscribe div is does not exist in the page')

  subscribeButton.addEventListener('click', (event) => {
    event.preventDefault()

    const email = subscribeInput.value

    subscribeDiv.classList.add('hidden')
    subscribeDone.classList.remove('hidden')

    if ((window as any).gtag) {
      ;(window as any).gtag('event', 'subscribe', {
        category: 'Subscribe',
        label: 'Subscribe form submitted',
      })
    } else {
      console.error('window.gtag is undefined')
    }

    fetch('https://api.sendinblue.com/v3/contacts', {
      method: 'POST',
      headers: {
        accept: 'application/json',
        'content-type': 'application/json',
        'api-key':
          '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',
      },
      body: JSON.stringify({ email }),
    })
      .then((response) => {
        if (!response.ok) {
          console.error(response)
          throw new Error(`Response is ${response.status}`)
        }
        return response.json()
      })
      .then((response) => console.log(response))
      .catch((error) => {
        subscribeError.classList.remove('hidden')
        subscribeDone.classList.add('hidden')
        console.error(error)
      })
  })
</script>
